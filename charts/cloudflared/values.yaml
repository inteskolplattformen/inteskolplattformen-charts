# Default values for cloudflared.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: cloudflare/cloudflared
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

tunnel:
  # Name of the tunnel. This **must** match the name specified in credentials.json.
  name: "example-tunnel"
  # The secret referenced must be an opaque secret containing a credentials.json file specifying the tunnel credentials.
  # By default, the credentials file will be created under ~/.cloudflared/<tunnel ID>.json
  # when you run `cloudflared tunnel create`. You can move it into a secret by using:
  # ```sh
  # kubectl create secret generic tunnel-credentials \
  # --from-file=credentials.json=/Users/yourusername/.cloudflared/<tunnel ID>.json
  # ```
  credentialsSecret: ""
  # The `ingress` block tells cloudflared which local service to route incoming
  # requests to. For more about ingress rules, see
  # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress
  #
  # Remember, these rules route traffic from cloudflared to a local service. To route traffic
  # from the internet to cloudflared, run `cloudflared tunnel route dns <tunnel> <hostname>`.
  # E.g. `cloudflared tunnel route dns example-tunnel tunnel.example.com`.
  ingress: |
    - hostname: api.skolorna.com
      service: http://ingress-nginx-controller.nginx:80
    - service: http_status:404
