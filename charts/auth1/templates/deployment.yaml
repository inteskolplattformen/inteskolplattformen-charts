apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth1.fullname" . }}
  labels:
    {{- include "auth1.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "auth1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "auth1.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "auth1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: REDIS_URL
              {{- if .Values.redis.url }}
              value: {{ .Values.redis.url }}
              {{- else }}
              value: "redis://:{{ .Values.redis.auth.password }}@{{ include "auth1.fullname" . }}-redis-master"
              {{- end }}
            - name: TRUST_PROXY
              value: {{ quote .Values.trustProxy }}
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.smtp.secretName }}
                  key: host
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.smtp.secretName }}
                  key: username
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.smtp.secretName }}
                  key: password
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: url
            - name: VERIFICATION_URL
              value: {{ quote .Values.verificationUrl }}
            - name: SENTRY_DSN
              value: {{ quote .Values.sentry.dsn }}
            - name: SENTRY_ENVIRONMENT
              value: {{ quote .Values.sentry.environment }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
